/*
 * RCC_Program.c
 *
 *  Created on: Aug 14, 2024
 *      Author: 20128
 */

#include "../LIB/STD_Types.h"
#include "../LIB/Bit_Math.h"
#include "RCC_Registers.h"
#include "RCC_Interface.h"
#include "RCC_Config.h"

void RCC_Init(void){
#if RCC_Clock == RCC_HSE
	/*Enable clock*/
	Set_Bit(RCC_Registers->CR,HSEON);
	/*wait until it stable*/
	while(Get_Bit(RCC_Registers->CR,HSERDY));
	/*choose the clock source*/
	uint32 temp_CFGR = RCC_Registers->CFGR ;
	temp_CFGR &=(~((uint32)LS2B_MASK));
	temp_CFGR |= (uint32)CLOCK_Select ;
	RCC_Registers->CFGR = temp_CFGR;
	/*close other sources*/
	Clr_Bit(RCC_Registers->CR,HSION);
	Clr_Bit(RCC_Registers->CR,PLLON);
#elif RCC_Clock == RCC_HSI
	/*Enable clock*/
	Set_Bit(RCC_Registers->CR,HSION);
	/*wait until it stable*/
	while(Get_Bit(RCC_Registers->CR,HSIRDY));
	/*choose the clock source*/
	uint32 temp_CFGR = RCC_Registers->CFGR ;
	temp_CFGR &=(~((uint32)LS2B_MASK));
	temp_CFGR |= (uint32)CLOCK_Select ;
	RCC_Registers->CFGR = temp_CFGR;
	/*close other sources*/
	Clr_Bit(RCC_Registers->CR,PLLON);
	Clr_Bit(RCC_Registers->CR,HSEON);
#elif RCC_Clock == RCC_PLL
	/*Enable clock*/
	Set_Bit(RCC_Registers->CR,PLLON);
	/*wait until it stable*/
	while(Get_Bit(RCC_Registers->CR,PLLRDY));
	/*choose the clock source*/
	uint32 temp_CFGR = RCC_Registers->CFGR ;
	temp_CFGR &=(~((uint32)LS2B_MASK));
	temp_CFGR |= (uint32)CLOCK_Select ;
	RCC_Registers->CFGR = temp_CFGR;
	/*close other sources*/
	Clr_Bit(RCC_Registers->CR,HSEON);
	Clr_Bit(RCC_Registers->CR,HSION);
#endif
}
void RCC_Enable_peripheral((uint32 *)RCC_Registers ,uint8 peripheral){
Set_Bit(RCC_Registers->Desired_Reg , peripheral);
}
void RCC_Disable_peripheral(void){

}
